name: 提取 boot / init_boot.img

on:
  push:
  workflow_dispatch:

jobs:
  YIJIANTIQU:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
            
      - name: Free Disk Space
        uses: endersonmenezes/free-disk-space@main
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "android* azure* clang* dotnet* firefox* ghc* golang* google* libclang* libgl1* lld* llvm* \
            microsoft* mongodb* mono* mysql* nodejs* openjdk* php* postgresql* powershell* snap* temurin* yarn* zulu*"
          remove_packages_one_command: true
          remove_folders: "/etc/apt/sources.list.d* /etc/mono* /etc/mysql* /usr/include/linux/android* /usr/lib/llvm* /usr/lib/mono* \
            /usr/local/lib/android* /usr/local/lib/node_modules* /usr/local/share/chromium* /usr/local/share/powershell* \
            /usr/local/share/vcpkg/ports/azure* /usr/local/share/vcpkg/ports/google* /usr/local/share/vcpkg/ports/libpq/android* \
            /usr/local/share/vcpkg/ports/llvm* /usr/local/share/vcpkg/ports/mysql* /usr/local/share/vcpkg/ports/snap* \
            /usr/share/azure* /usr/share/dotnet* /usr/share/glade* /usr/share/miniconda* /usr/share/php* /usr/share/swift \
            /var/lib/mysql* /var/log/azure*"
          testing: false
          
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install tree
          sudo apt-get -y install python3-pip aria2 liblzma-dev brotli lz4
          pip3 install backports.lzma pycrypto
          pip install protobuf==3.20

      - name: 提取镜像
        run: |
          cd ~
          git clone --recurse-submodules https://github.com/tosasitill/Firmware_extractor.git
          cd Firmware_extractor
          aria2c -s 10 -x 10 -d . -o firmware.zip "https://ultimateota.d.miui.com/OS1.0.11.0.ULTCNXM/miui_MAYFLY_OS1.0.11.0.ULTCNXM_ae8d2aa0d0_14.0.zip?t=1731507968&s=4efaa5e108ad9984e99cfbe194d957a4"
          ./extractor.sh firmware.zip
          if [ -f "init_boot.img" ]; then
            mkdir -p out
            mv init_boot.img out/
            echo "init_boot.img has been moved to the out folder."
          else
            echo "init_boot.img not found."
          fi
          tree
      - name: Upload .img file as artifact
        uses: actions/upload-artifact@main
        with:
          name: boot.img  # 这里设置 artifact 的名称
          path: ~/Firmware_extractor/out/boot.img  # 这里设置要上传的文件的路径
               
      - name: Check 和 upload init_boot.img as artifact
        run: |
          # 切换到 out 目录
          cd ~/Firmware_extractor/out
          # 检查 init_boot.img 文件是否存在
          if [ -f "init_boot.img" ]; then
            # 文件存在，上传 artifact
            echo "init_boot.img found. Uploading..."
            # 设置输出变量，以便在下一个步骤中使用
            echo "img_file=init_boot.img" >> $GITHUB_ENV
          else
            # 文件不存在，打印消息
            echo "init_boot.img not found. Skipping upload."
          fi

      - name: Upload init_boot.img as artifact
        if: env.img_file == 'init_boot.img'  # 只有在上一步中找到文件时才执行这个步骤
        uses: actions/upload-artifact@main
        with:
          name: init_boot.img
          path: ~/Firmware_extractor/out/init_boot.img


  #    - name: Upload firmware.zip as artifact
 #       uses: actions/upload-artifact@main
  #      with:
 #         name: firmware.zip  # 这里设置 artifact 的名称
   #       path: ~/Firmware_extractor/firmware.zip  # 这里设置要上传的文件的路径
     
